import unittest

import numpy as np
import sys
import os
sys.path.insert(0, os.path.abspath(
    os.path.join(os.path.dirname(__file__), '..')))

from TWMR.TWMR import TWMR
from revTWMR.revTWMR import revTWMR

class TestStringMethods(unittest.TestCase):

    def test_TWMR(self):
        beta =np.array(
            [[0, -0.028909162416676],
            [-0.026739292049339 ,0.0325915594081434],
            [-0.0510893276929747, 0]])
        
        gamma = np.array([0.00233621994610913, -0.00517737238761085, 0.00459889990058022])
        
        ld = np.array(
            [[1,0.0487694,0.151668],
            [0.0487694,1,0.118453],
            [0.151668,0.118453,1]])

        result = TWMR(beta,gamma, nEQTLs= 32000, NGwas= 239087, ldMatrix=ld)

        self.assertAlmostEqual(result.Alpha[0], -0.00579319058544445, places=7)
        self.assertAlmostEqual(result.Se[0], 0.006162341606456332, places=7)
        self.assertAlmostEqual(result.Pval[0], 0.34716846310339, places=3)



    def test_revTWMR(self):
        effectTbl = np.array([-2.91399997e-04,  2.16252931e-03, -8.93462864e-03, -4.45854758e-03,
       -4.38724879e-03, -1.24811386e-02, -4.99152265e-03, -6.48966787e-03,
       -6.34795014e-03, -2.78350604e-03,  8.96605795e-03,  2.19608593e-03,
       -6.11011688e-03, -9.88994761e-03, -2.31133950e-03,  1.68891543e-03,
       -5.69050922e-03,  3.38511043e-04, -1.45776381e-03, -4.86333900e-03,
       -5.52152783e-03,  5.80092158e-03,  5.00125470e-03,  6.95609180e-03,
       -7.65493624e-04, -2.92142334e-03, -1.11316051e-02, -1.00227409e-02,
       -3.59046982e-03, -3.35721024e-03,  1.75966011e-03,  4.26178713e-03,
        5.94858663e-03, -2.01253109e-03, -9.30760552e-03, -9.59904875e-03,
       -5.67949821e-03,  6.44807499e-03, -1.70563813e-03, -1.06425835e-03,
        1.04974601e-02,             np.nan,  3.19279731e-03,  1.44068707e-02,
        4.44657669e-03, -3.46892593e-03, -2.08960258e-03, -1.13273125e-03,
        1.48766696e-03,  6.76275265e-03, -5.65901785e-03,  1.36846324e-03,
       -2.94874690e-03,  2.09800389e-04, -1.51901620e-03,  1.54735760e-02,
       -1.83023238e-03,  2.00635763e-04, -3.70033659e-03,  5.25118769e-04,
        1.00186593e-03,  2.00602959e-03,  1.74896988e-03, -9.27651073e-03,
        1.04488962e-02, -1.33320068e-03, -4.15316058e-04, -1.19375474e-02,
       -9.94423509e-04, -4.35281278e-03, -1.19360622e-03,  4.97063322e-03,
       -2.64815484e-03, -1.59881422e-03,  4.13923664e-03, -2.74562728e-03,
        8.69654762e-03,  5.45921291e-03, -4.69322928e-03,  1.27107215e-03,
        1.08430509e-03, -1.17084923e-03, -4.92854743e-03,  5.32279771e-03,
       -2.68645961e-03,  8.53388922e-04,  8.13564401e-05, -4.37575578e-03,
        1.26327753e-02, -1.32275215e-03,  9.48246357e-03,  4.34748676e-03,
       -9.18448947e-04, -5.96459882e-03,  1.87460839e-03, -5.95170900e-03,
        6.20704946e-03,  1.03316935e-03, -5.44805974e-03,  1.76938895e-04,
       -5.61862602e-03, -2.78724108e-04,  5.90690146e-03,  6.80533708e-03,
        4.98202451e-03,  1.19050650e-02,  8.19283059e-03,  1.35814945e-04,
        7.38155080e-03,  8.49446743e-03, -1.29950834e-03,  2.32546884e-03,
       -1.01846827e-03, -1.35958774e-03,  7.10588589e-04, -6.11026993e-04,
       -3.73271421e-03,  3.07842444e-03, -1.35714011e-03,  7.86743631e-03,
       -5.96108059e-03,  5.96766782e-03, -8.20242098e-03, -6.85695268e-03,
       -2.73422641e-03,  2.64302500e-03, -9.69449713e-04,  1.25544007e-02,
        8.94389353e-03])
        gwasEffect = np.array([ 0.05099613,  0.03237665, -0.02815752,  0.02785226,  0.0248288 ,
                                -0.02267947,  0.02136358,  0.021249  , -0.02081159,  0.0200858 ,
                                -0.02007698,  0.01964593, -0.01963883,  0.0188424 ,  0.01852683,
                                -0.01847789,  0.01820302, -0.01766779, -0.01717579, -0.01694408,
                                -0.01636402, -0.01633065, -0.01623217, -0.0160941 , -0.01594203,
                                    0.01592993,  0.01562918,  0.01562497,  0.01538097,  0.01510986,
                                -0.01489376,  0.0148806 , -0.01467006,  0.01436402, -0.01415411,
                                -0.01402114, -0.01397674, -0.01396328, -0.013936  ,  0.01392616,
                                -0.0137942 , -0.01377261, -0.01362626, -0.01358089,  0.01349792,
                                    0.01344649,  0.01338403,  0.01332712, -0.01329083, -0.01320092,
                                -0.01313688,  0.01308261,  0.01307644, -0.01304359, -0.0129248 ,
                                    0.01282184,  0.01269081,  0.01268035, -0.01260865,  0.01259705,
                                    0.01255052, -0.01249759, -0.01230392,  0.01221139, -0.01217623,
                                    0.01202055,  0.0119902 , -0.01198792, -0.01185263,  0.01168216,
                                -0.01162759, -0.01154837,  0.01124184, -0.01117289, -0.01116256,
                                -0.01109178, -0.01104884, -0.01098574, -0.01088694,  0.01086103,
                                -0.0108042 ,  0.01066461, -0.01063641,  0.01056163, -0.01053365,
                                    0.01048196, -0.01045975, -0.01043963, -0.01037931, -0.01032815,
                                    0.01016466, -0.01015178,  0.01014806, -0.01013198, -0.01007508,
                                -0.01003341,  0.00998339,  0.00990571,  0.00987858,  0.00986978,
                                -0.00985592,  0.0098462 ,  0.00984497, -0.00983164, -0.00976148,
                                    0.00975095, -0.00970809, -0.00963095, -0.00959788, -0.00957095,
                                -0.00956901,  0.00955203, -0.009543  , -0.00952647,  0.00950189,
                                -0.00941537,  0.00940461,  0.00938286, -0.00932893,  0.00930192,
                                    0.00924406, -0.00924311,  0.0092344 , -0.0091873 , -0.00917208,
                                -0.00913618,  0.00912892, -0.00911611, -0.00909218])
        
        qtlNames = np.array(['rs1421085', 'rs12967135', 'rs12463617', 'rs543874', 'rs713586',
                            'rs6265', 'rs987237', 'rs10938397', 'rs2013208', 'rs7132908',
                            'rs2307111', 'rs11755393', 'rs3810291', 'rs7498665', 'rs13107325',
                            'rs12691307', 'rs3817334', 'rs1993709', 'rs2287019', 'rs10871454',
                            'rs2531995', 'rs1167827', 'rs1364063', 'rs997295', 'rs1516725',
                            'rs4237643', 'rs17391694', 'rs10968576', 'rs11012732',
                            'rs10514301', 'rs7141420', 'rs11250076', 'rs4740619', 'rs17024393',
                            'rs12444979', 'rs2820292', 'rs10132280', 'rs1884897', 'rs1808579',
                            'rs2245368', 'rs17405819', 'rs6091540', 'rs1441264', 'rs116896792',
                            'rs11613704', 'rs12566985', 'rs8102137', 'rs568617', 'rs11165643',
                            'rs6857', 'rs7503807', 'rs2921071', 'rs887912', 'rs10415135',
                            'rs4851266', 'rs17522122', 'rs12148050', 'rs9568867', 'rs2737265',
                            'rs6731302', 'rs657452', 'rs7599312', 'rs7332115', 'rs977747',
                            'rs483465', 'rs13078960', 'rs16851483', 'rs2456973', 'rs4929923',
                            'rs6964833', 'rs17724992', 'rs10423674', 'rs7708584', 'rs12286929',
                            'rs3138493', 'rs7164727', 'rs11992162', 'rs4646450', 'rs10791097',
                            'rs7428796', 'rs1064395', 'rs705145', 'rs1582931', 'rs7216064',
                            'rs1528435', 'rs1000940', 'rs1016883', 'rs12885454', 'rs12202969',
                            'rs7904519', 'rs3734523', 'rs2968863', 'rs652888', 'rs2365389',
                            'rs7243357', 'rs9398171', 'rs261967', 'rs905938', 'rs12692738',
                            'rs10733682', 'rs12474201', 'rs7989336', 'rs7173947', 'rs11623869',
                            'rs477895', 'rs2248551', 'rs1532331', 'rs4778879', 'rs29941',
                            'rs6804842', 'rs1050338', 'rs874628', 'rs12484776', 'rs1229984',
                            'rs8092503', 'rs7896518', 'rs9540493', 'rs12454712', 'rs13191362',
                            'rs2710323', 'rs6477694', 'rs9560113', 'rs17496332', 'rs613872',
                            'rs2341459', 'rs9388451', 'rs564343', 'rs900145', 'rs3769955'],
                            dtype=object)
        
        ngwas = np.array([359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983, 359983, 359983, 359983, 359983, 359983, 359983, 359983,
                        359983])
        
        nqtls = 30201.3203125

        result = revTWMR(effectTbl, gwasEffect, qtlNames, ngwas, nqtls, pValIterativeThreshold=0.05, pseudoInverse=False, device='cpu')

        self.assertAlmostEqual(result.Alpha, -0.042308458120046, places=7)
        self.assertAlmostEqual(result.AlphaIterative, -0.042308458120046, places=7)
        self.assertAlmostEqual(result.Se, 0.035751227968204, places=7)
        self.assertAlmostEqual(result.SeIterative, 0.035751227968204, places=7)

        self.assertAlmostEqual(result.HetP, 0.95793222537995, places=3)
        self.assertAlmostEqual(result.HetPIterative, 0.95793222537995, places=3)




if __name__ == '__main__':
    unittest.main()